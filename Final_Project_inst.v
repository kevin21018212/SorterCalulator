// Copyright (C) 2022  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 21.1 (Build Build 850 06/23/2022)
// Created on Fri Dec  2 20:45:14 2022

Final_Project Final_Project_inst
(
	.Q000(Q000_sig) ,	// input  Q000_sig
	.Q001(Q001_sig) ,	// input  Q001_sig
	.Q010(Q010_sig) ,	// input  Q010_sig
	.Q011(Q011_sig) ,	// input  Q011_sig
	.Q100(Q100_sig) ,	// input  Q100_sig
	.Q101(Q101_sig) ,	// input  Q101_sig
	.Q110(Q110_sig) ,	// input  Q110_sig
	.Q111(Q111_sig) ,	// input  Q111_sig
	.Q200(Q200_sig) ,	// input  Q200_sig
	.Q201(Q201_sig) ,	// input  Q201_sig
	.Q210(Q210_sig) ,	// input  Q210_sig
	.Q211(Q211_sig) ,	// input  Q211_sig
	.Q300(Q300_sig) ,	// input  Q300_sig
	.Q301(Q301_sig) ,	// input  Q301_sig
	.Q310(Q310_sig) ,	// input  Q310_sig
	.Q311(Q311_sig) ,	// input  Q311_sig
	.Q400(Q400_sig) ,	// input  Q400_sig
	.Q401(Q401_sig) ,	// input  Q401_sig
	.Q410(Q410_sig) ,	// input  Q410_sig
	.Q411(Q411_sig) ,	// input  Q411_sig
	.St(St_sig) ,	// input  St_sig
	.Clock(Clock_sig) ,	// input  Clock_sig
	.Zero(Zero_sig) ,	// input  Zero_sig
	.L0(L0_sig) ,	// output  L0_sig
	.L1(L1_sig) ,	// output  L1_sig
	.L2(L2_sig) ,	// output  L2_sig
	.L3(L3_sig) ,	// output  L3_sig
	.S0(S0_sig) ,	// output  S0_sig
	.S1(S1_sig) ,	// output  S1_sig
	.S2(S2_sig) ,	// output  S2_sig
	.S3(S3_sig) 	// output  S3_sig
);

